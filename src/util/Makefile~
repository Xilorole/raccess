BIG_INLINE_LIMIT = 20000
CFLAGS1 = 

CC = g++

SRC_DIR  = ../
UTIL_DIR = $(SRC_DIR)/util/
BED_DIR  = $(SRC_DIR)/bed/
MAF_DIR  = $(SRC_DIR)/maf/
PHAST_DIR = $(SRC_DIR)/phast/

INCLUDES  = -I$(SRC_DIR)

CFLAGS = -O3 -g3 -pg -Wall $(INCLUDES)                       \
	 -finline-limit=$(BIG_INLINE_LIMIT) $(CFLAGS1)
LIBS = -lz
CFLAGS_D = -O0 -g3 -pg -Wall -DDEBUG                         \
	   -fkeep-inline-functions -fkeep-static-consts      \
	   -finline-limit=0 -fno-default-inline $(CFLAGS1)
LIBS_D = -lz

.PHONY: clean depend all util bbls all_mpi util_mpi
.SUFFIXES: .cpp .hpp .o .o_D
all: all_

SRCS0    = $(UTIL_DIR)/alpha.cpp $(UTIL_DIR)/opt.cpp
SRCS1    = $(PHAST_DIR)/vector.c $(PHAST_DIR)/matrix.c $(PHAST_DIR)/numerical_opt.c
EXES_ALL =
SRCS_ALL =
include run_tn93_model.mk
include run_score_model_gamma.mk
include run_tree_prob.mk
include run_phybls_em_train_qsub.mk
include run_phybls_em_train_qsub_worker.mk
include run_phybls_em_train.mk
include run_rev_model.mk
include run_rev_break_dist.mk
include run_rev_break_genome.mk
include run_tdur_nmut.mk
include run_tdur_nmut_genome.mk
include run_tdur_pwm_match.mk
include run_compare_em_grad.mk
include run_tdur_pwm_match_hist.mk
include run_tdur_pwm_match_hist_mask.mk
include run_collect_minmax_tdur.mk
include run_sample_fdur_nmut.mk
include run_print_fdur_nmut.mk

ifneq ($(strip $(SCBDSERV)),)
  MAGI=true
endif
ifeq ($(strip $(MAGI)),)
  MPICC = mpicxx
else
  MPICC = mpic++
  LIBS += -lpthread
endif
MPICC = mpic++
EXES_ALL_MPI =
SRCS_ALL_MPI =

all_: util $(EXES_ALL)

all_mpi: util_mpi $(EXES_ALL_MPI)

util:
	(cd ../util/; make)
util_mpi:
	(cd ../util/; make all_mpi)

.cpp.o:
	$(CC) $(CFLAGS) $(INCLUDES) -o $@ -c $<
.cpp.o_D:
	$(CC) $(CFLAGS_D) $(INCLUDES) -o $@ -c $<
.c.o:
	$(CC) $(CFLAGS) $(INCLUDES) -o $@ -c $<
.c.o_D:
	$(CC) $(CFLAGS_D) $(INCLUDES) -o $@ -c $<
clean:
	rm -rf core {.,*}/{*.o,*.o_*,*.da,*.bb,*.bbg,*.gcda,*.gcno,*.gcov,*.stackdump,*.exe}
SUFLIST = o o_D 
depend:
	for opt in $(SUFLIST);                      \
	do touch make_deps_$$opt.mk;                \
	   makedepend -o.$$opt -fmake_deps_$$opt.mk \
	   -Y -- $(CFLAGS_D) $(INCLUDES) --         \
	   $(SRCS_ALL) $(SRCS_ALL_MPI);             \
	done
include make_deps_o.mk
include make_deps_o_D.mk


